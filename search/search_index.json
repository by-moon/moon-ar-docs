{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Moon Technologies AR Platform Documentation","text":"<p>Welcome to the comprehensive developer documentation for the Moon Technologies AR glasses platform - a custom Android 9-based wearable device designed for immersive augmented reality experiences.</p>"},{"location":"#platform-overview","title":"Platform Overview","text":"<p>The Moon AR platform is built on:</p> <ul> <li>Custom Android 9 ROM optimized for AR applications</li> <li>Qualcomm-based processor with 4GB RAM and 4GB eMMC storage</li> <li>Advanced sensor array including RGB camera, dual NIR eye-tracking cameras, 6DoF IMU</li> <li>Unity 2021.3.33 LTS for spatial user interfaces</li> </ul>"},{"location":"#key-features","title":"Key Features","text":"Component Capability Developer Access Eye Tracking Precise gaze cursor System-level integration only RGB Camera Computer vision tasks Exclusive access required Gesture Input Wristband neural sensing Broadcast intent system Touch Interface Capacitive slider Mapped to Unity input"},{"location":"#development-model","title":"Development Model","text":"<p>The platform follows a two-phase development approach:</p> <ol> <li>Android Plugin Layer: Core functionality in Java/Kotlin</li> <li>Unity Presentation Layer: 3D spatial UI and user experience</li> </ol> <p>Camera Exclusivity</p> <p>RGB and eye-tracking cameras cannot operate simultaneously. The SDK handles automatic switching based on application requirements.</p>"},{"location":"#quick-start","title":"Quick Start","text":"<ol> <li>Set up your development environment</li> <li>Connect to your Moon AR device</li> <li>Create your first Unity project</li> <li>Deploy and test</li> </ol>"},{"location":"#support","title":"Support","text":"<p>For technical support and hardware access, please contact the Moon Technologies development team:</p> <p>\ud83d\udce7 Email: admin@moontechnologies.com</p>"},{"location":"getting-started/environment-setup/","title":"Development Environment Setup","text":"<p>This guide walks you through setting up your development environment for Moon AR application development.</p>"},{"location":"getting-started/environment-setup/#unity-development-environment","title":"Unity Development Environment","text":""},{"location":"getting-started/environment-setup/#install-unity-2021333-lts","title":"Install Unity 2021.3.33 LTS","text":"<ol> <li>Download Unity Hub from the official Unity website</li> <li>Install Unity 2021.3.33f1 LTS through Unity Hub</li> <li>Include Android Build Support module during installation</li> </ol>"},{"location":"getting-started/environment-setup/#required-unity-packages","title":"Required Unity Packages","text":"<p>Add these packages via Window \u2192 Package Manager:</p> <pre><code>{\n  \"dependencies\": {\n    \"com.unity.inputsystem\": \"1.5.1\",\n    \"com.google.external-dependency-manager\": \"1.2.178\"\n  }\n}\n</code></pre> <p>No AR Foundation Required</p> <p>The Moon AR platform uses a custom ROM that handles AR functionality. Do not install AR Foundation or XR packages.</p>"},{"location":"getting-started/environment-setup/#android-development-environment","title":"Android Development Environment","text":""},{"location":"getting-started/environment-setup/#install-android-studio","title":"Install Android Studio","text":"<ol> <li>Download Android Studio (Hedgehog or later)</li> <li>Install SDK platforms for API levels 28-33</li> <li>Configure Android SDK build tools</li> </ol>"},{"location":"getting-started/environment-setup/#sdk-configuration","title":"SDK Configuration","text":"<p>Verify SDK installation:</p> <pre><code>android list targets\n</code></pre> <p>Install required platforms:</p> <pre><code>sdkmanager \"platforms;android-28\"\nsdkmanager \"platforms;android-33\"\nsdkmanager \"build-tools;33.0.0\"\n</code></pre>"},{"location":"getting-started/environment-setup/#development-machine-requirements","title":"Development Machine Requirements","text":"Component Minimum Recommended OS Windows 10, macOS 10.15, Ubuntu 18.04 Latest versions RAM 8GB 16GB+ Storage 50GB free 100GB+ Graphics DirectX 9.0c compatible Dedicated GPU"},{"location":"getting-started/environment-setup/#verification","title":"Verification","text":"<p>Test your setup:</p> <p>Check Unity installation:</p> <pre><code>unity -version\n</code></pre> <p>Verify Android tools:</p> <pre><code>adb version\n</code></pre> <p>Your environment is ready when both commands return version information without errors.</p>"},{"location":"platform-overview/hardware/","title":"Hardware Specifications","text":"<p>The Moon AR platform is built on custom hardware optimized for augmented reality applications with strict resource constraints.</p>"},{"location":"platform-overview/hardware/#core-hardware","title":"Core Hardware","text":"Component Specification Implications Processor Qualcomm SoC Optimized for low-power AR workloads Memory 4GB LPDDR4 Strict memory management required Storage 4GB eMMC APK + assets must be \u2264 600MB OS Custom Android 9 Modified launcher, system apps removed"},{"location":"platform-overview/hardware/#sensor-array","title":"Sensor Array","text":""},{"location":"platform-overview/hardware/#camera-system","title":"Camera System","text":"<pre><code>graph TD\n    A[Camera Manager] --&gt; B[RGB Camera]\n    A --&gt; C[Eye Tracking Cameras]\n    B -.-&gt; D[Mutual Exclusion]\n    C -.-&gt; D\n    D --&gt; E[Single Active Pipeline]\n</code></pre> <p>Camera Components:</p> <ul> <li>RGB Camera: Front-facing, computer vision tasks</li> <li>Eye Tracking: Dual near-infrared cameras</li> <li>Exclusivity Rule: Only one camera system active at a time</li> </ul>"},{"location":"platform-overview/hardware/#motion-sensors","title":"Motion Sensors","text":"<ul> <li>6DoF IMU: Head tracking and spatial orientation</li> <li>Neural Wristband: Hand gesture recognition</li> <li>Capacitive Slider: Direct touch input</li> </ul>"},{"location":"platform-overview/hardware/#performance-constraints","title":"Performance Constraints","text":""},{"location":"platform-overview/hardware/#memory-management","title":"Memory Management","text":"<pre><code>// Example: Proper resource cleanup\noverride fun onPause() {\n    super.onPause()\n    camera?.release()    // Critical for camera switching\n    System.gc()          // Encourage garbage collection\n}\n</code></pre>"},{"location":"platform-overview/hardware/#storage-optimization","title":"Storage Optimization","text":"<ul> <li>Use Split APK delivery for ARM64 only</li> <li>Compress textures to ETC2 format</li> <li>Stream large assets rather than bundling</li> </ul> <p>Hardware Limitations</p> <p>The 4GB storage includes system files. Your application bundle should not exceed 600MB total.</p>"},{"location":"platform-overview/hardware/#developer-testing-hardware","title":"Developer Testing Hardware","text":""},{"location":"platform-overview/hardware/#physical-device-required","title":"Physical Device Required","text":"<p>The Moon AR device is essential for:</p> <ul> <li>Eye tracking integration testing</li> <li>Camera switching validation</li> <li>Gesture input verification</li> <li>Performance profiling</li> </ul>"},{"location":"platform-overview/hardware/#emulator-sufficient","title":"Emulator Sufficient","text":"<p>Android 9 emulator works for:</p> <ul> <li>Business logic testing</li> <li>UI layout verification</li> <li>Plugin development</li> </ul>"},{"location":"unity-development/project-config/","title":"Unity Project Configuration","text":"<p>Configure your Unity project specifically for the Moon AR platform requirements.</p>"},{"location":"unity-development/project-config/#project-settings","title":"Project Settings","text":""},{"location":"unity-development/project-config/#player-settings","title":"Player Settings","text":"<p>Navigate to Edit \u2192 Project Settings \u2192 Player:</p> <pre><code>// Required settings for Moon AR\nPlayerSettings.SetScriptingBackend(BuildTargetGroup.Android, ScriptingImplementation.IL2CPP);\nPlayerSettings.Android.minSdkVersion = AndroidSdkVersions.AndroidApiLevel28;\nPlayerSettings.Android.targetSdkVersion = AndroidSdkVersions.AndroidApiLevel33;\n</code></pre>"},{"location":"unity-development/project-config/#build-settings","title":"Build Settings","text":"Setting Value Reason Platform Android Target device OS Texture Compression ETC2 Hardware compatibility Scripting Backend IL2CPP Performance optimization Target Architectures ARM64 only Storage constraints"},{"location":"unity-development/project-config/#package-management","title":"Package Management","text":""},{"location":"unity-development/project-config/#essential-packages","title":"Essential Packages","text":"<p>Add to <code>Packages/manifest.json</code>:</p> <pre><code>{\n  \"dependencies\": {\n    \"com.unity.inputsystem\": \"1.5.1\",\n    \"com.google.external-dependency-manager\": \"1.2.178\",\n    \"com.unity.textmeshpro\": \"3.0.6\"\n  }\n}\n</code></pre>"},{"location":"unity-development/project-config/#external-dependency-manager","title":"External Dependency Manager","text":"<ol> <li>Install EDM4U via Package Manager</li> <li>Configure for Android development:</li> </ol> <p>Create: <code>Assets/Editor/DependencyConfig.cs</code></p> <pre><code>[InitializeOnLoad]\npublic class DependencyConfig\n{\n    static DependencyConfig()\n    {\n        EditorApplication.delayCall += () =&gt;\n        {\n            GooglePlayServices.PlayServicesResolver.Resolve();\n        };\n    }\n}\n</code></pre> <p>Create: <code>InputActions/MoonARControls.inputactions</code></p> <pre><code>{\n  \"maps\": [\n    {\n      \"name\": \"MoonAR\",\n      \"actions\": [\n        {\n          \"name\": \"Select\",\n          \"type\": \"Button\",\n          \"bindings\": {\n            \"path\": \"/space\"\n          }\n        }\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"unity-development/project-config/#scene-configuration","title":"Scene Configuration","text":""},{"location":"unity-development/project-config/#camera-setup","title":"Camera Setup","text":"<pre><code>public class MoonARCamera : MonoBehaviour\n{\n    void Start()\n    {\n        var camera = GetComponent&lt;Camera&gt;();\n        camera.fieldOfView = 45f; // Optimized for AR glasses\n        camera.nearClipPlane = 0.1f;\n        camera.farClipPlane = 50f;\n    }\n}\n</code></pre>"},{"location":"unity-development/project-config/#ui-canvas-configuration","title":"UI Canvas Configuration","text":"<pre><code>public class WorldSpaceUI : MonoBehaviour\n{\n    void Start()\n    {\n        var canvas = GetComponent&lt;Canvas&gt;();\n        canvas.renderMode = RenderMode.WorldSpace;\n        canvas.worldCamera = Camera.main;\n\n        // Position at comfortable viewing distance\n        transform.position = new Vector3(0, 0, 1f);\n        transform.localScale = Vector3.one * 0.001f; // Scale for readability\n    }\n}\n</code></pre> <p>Performance Optimization</p> <p>Keep total triangle count under 1.2M and maintain consistent 30 FPS on Qualcomm AR2 chips.</p>"}]}